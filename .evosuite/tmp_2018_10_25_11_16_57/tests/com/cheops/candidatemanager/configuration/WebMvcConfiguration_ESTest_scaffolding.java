/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Oct 25 09:26:52 GMT 2018
 */

package com.cheops.candidatemanager.configuration;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class WebMvcConfiguration_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.cheops.candidatemanager.configuration.WebMvcConfiguration"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\THOMAS~1.VER\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\thomas.verhulst\\Documents\\workspace-sts-3.9.5.RELEASE\\coolestuffvoorcheops"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\thomas.verhulst"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "Thomas.Verhulst"); 
    java.lang.System.setProperty("user.timezone", "Europe/Paris"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(WebMvcConfiguration_ESTest_scaffolding.class.getClassLoader() ,
      "org.springframework.beans.factory.HierarchicalBeanFactory",
      "org.springframework.web.context.ServletContextAware",
      "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer",
      "org.springframework.validation.Validator",
      "org.springframework.context.support.ApplicationObjectSupport",
      "org.springframework.context.annotation.ComponentScan$Filter",
      "com.cheops.candidatemanager.configuration.WebMvcConfiguration",
      "org.springframework.web.servlet.config.annotation.InterceptorRegistry",
      "org.springframework.context.ApplicationEventPublisher",
      "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
      "org.springframework.web.servlet.config.annotation.PathMatchConfigurer",
      "org.springframework.web.context.support.WebApplicationObjectSupport",
      "org.springframework.format.FormatterRegistry",
      "org.springframework.core.io.ResourceLoader",
      "org.springframework.web.servlet.mvc.AbstractController",
      "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer",
      "org.springframework.core.convert.converter.ConverterRegistry",
      "org.springframework.web.servlet.HandlerMapping",
      "org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration",
      "org.springframework.beans.factory.support.BeanNameGenerator",
      "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer",
      "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "org.springframework.context.ApplicationContextAware",
      "org.springframework.beans.factory.ListableBeanFactory",
      "org.springframework.core.Ordered",
      "org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter",
      "org.springframework.web.servlet.config.annotation.ViewControllerRegistry",
      "org.springframework.web.servlet.mvc.Controller",
      "org.springframework.beans.factory.Aware",
      "org.springframework.web.servlet.handler.AbstractHandlerMapping",
      "org.springframework.web.servlet.config.annotation.CorsRegistry",
      "org.springframework.core.env.EnvironmentCapable",
      "org.springframework.validation.MessageCodesResolver",
      "org.springframework.lang.Nullable",
      "org.springframework.context.MessageSource",
      "org.springframework.web.servlet.handler.MatchableHandlerMapping",
      "org.springframework.context.annotation.ScopedProxyMode",
      "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
      "org.springframework.context.annotation.Import",
      "org.springframework.web.servlet.mvc.ParameterizableViewController",
      "org.springframework.web.servlet.config.annotation.EnableWebMvc",
      "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry",
      "org.springframework.context.ApplicationContext",
      "org.springframework.web.servlet.config.annotation.ViewControllerRegistration",
      "org.springframework.context.annotation.ComponentScan",
      "org.springframework.web.servlet.support.WebContentGenerator",
      "org.springframework.http.HttpStatus",
      "org.springframework.web.servlet.config.annotation.ViewResolverRegistry",
      "org.springframework.context.annotation.ScopeMetadataResolver",
      "org.springframework.beans.factory.BeanFactory",
      "org.springframework.core.io.support.ResourcePatternResolver",
      "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.springframework.web.servlet.config.annotation.ViewControllerRegistration", false, WebMvcConfiguration_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.springframework.web.servlet.config.annotation.ViewControllerRegistry", false, WebMvcConfiguration_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(WebMvcConfiguration_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter",
      "com.cheops.candidatemanager.configuration.WebMvcConfiguration",
      "org.springframework.context.annotation.ScopedProxyMode",
      "org.springframework.web.servlet.config.annotation.ViewControllerRegistry",
      "org.springframework.web.servlet.config.annotation.ViewControllerRegistration"
    );
  }
}
