/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 25 09:26:52 GMT 2018
 */

package com.cheops.candidatemanager.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cheops.candidatemanager.configuration.WebMvcConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistration;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WebMvcConfiguration_ESTest extends WebMvcConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WebMvcConfiguration webMvcConfiguration0 = new WebMvcConfiguration();
      ViewControllerRegistry viewControllerRegistry0 = mock(ViewControllerRegistry.class, new ViolatedAssumptionAnswer());
      doReturn((ViewControllerRegistration) null).when(viewControllerRegistry0).addViewController(anyString());
      // Undeclared exception!
      try { 
        webMvcConfiguration0.addViewControllers(viewControllerRegistry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cheops.candidatemanager.configuration.WebMvcConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WebMvcConfiguration webMvcConfiguration0 = new WebMvcConfiguration();
      ViewControllerRegistration viewControllerRegistration0 = mock(ViewControllerRegistration.class, new ViolatedAssumptionAnswer());
      ViewControllerRegistry viewControllerRegistry0 = mock(ViewControllerRegistry.class, new ViolatedAssumptionAnswer());
      doReturn(viewControllerRegistration0).when(viewControllerRegistry0).addViewController(anyString());
      webMvcConfiguration0.addViewControllers(viewControllerRegistry0);
  }
}
